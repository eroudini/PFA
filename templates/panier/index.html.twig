{% extends 'base.html.twig' %}

{% block title %}Panier
{% endblock %}

{% block body %}

<script>
// Cet √©v√©nement est d√©clench√© lorsque le DOM est compl√®tement charg√©
document.addEventListener('DOMContentLoaded', function() {
    // S√©lectionne tous les champs de quantit√©
    var quantityFields = document.querySelectorAll('.form-control-sm');

    // Parcourt chaque champ de quantit√© s√©lectionn√©
    quantityFields.forEach(function(field) {
        // Ajoute un √©couteur d'√©v√©nements 
        field.addEventListener('input', function() {
            // R√©cup√®re la valeur de quantit√© saisie et la convertit en entier
            var quantity = parseInt(this.value);
            // R√©cup√®re l'√©l√©ment qui affiche le prix unitaire du produit le plus proche
            var priceElement = this.closest('.card-body').querySelector('.mb-0');
            // R√©cup√®re le texte du prix unitaire
            var priceText = priceElement.textContent;
            // Extrait le prix unitaire du texte et le convertit en nombre √† virgule flottante
            var price = parseFloat(priceText.substring(0, priceText.length - 2)); 
            // R√©cup√®re l'√©l√©ment qui affiche le prix total du produit
            var totalPriceElement = this.closest('.card-body').querySelector('#total-price');

            // R√©cup√®re le prix total actuel et le convertit en nombre √† virgule flottante
            var currentTotalPrice = parseFloat(totalPriceElement.textContent);
            // R√©cup√®re la quantit√© pr√©c√©dente √† partir de l'attribut de donn√©es ou 0 s'il n'existe pas
            var previousQuantity = parseInt(this.dataset.previousQuantity) || 0;
            // Calcule le changement de prix en fonction de la variation de quantit√©
            var priceChange = (quantity - previousQuantity) * price;
            // Calcule le nouveau prix total en ajoutant le changement de prix au total actuel
            var newTotalPrice = currentTotalPrice + priceChange;

            // Met √† jour le contenu de l'√©l√©ment affichant le prix total avec le nouveau prix total calcul√©
            totalPriceElement.textContent = newTotalPrice.toFixed(2) + " ‚Ç¨";

            // Met √† jour l'attribut de donn√©es avec la quantit√© actuelle pour la prochaine utilisation
            this.dataset.previousQuantity = quantity;
        });
    });
});
</script>
	<section class="h-100 pardiv" style="background-color: #eee;">
		<div class="container h-100 py-5">
			<div class="row d-flex justify-content-center align-items-center h-100">
				<div class="col-10">
					<h5 class="mb-3">
						<a href="{{ path('home') }}" class="text-body">
							<i class="fas fa-long-arrow-alt-left me-2"></i>Continuer mes achats</a>
					</h5>

					<div class="d-flex justify-content-between align-items-center mb-4">
						<h3 class="fw-normal mb-0 text-black">Votre panier</h3>
					</div>
					{# Condition qui verifie si le panier est superieur a zero #}
					{% if cart | length > 0 %}
						{{ form_start(cartForm)}}
              {% for saleForm in cartForm.sales %}
                <div class="card rounded-3 mb-4">
                  <div class="card-body p-4">
                    <div class="row d-flex justify-content-between align-items-center">
                      <div class="col-md-2 col-lg-2 col-xl-2">
                        <img src="{{ saleForm.vars['data'].getProduct().images}}" class="img-fluid rounded-3" alt="Cotton T-shirt">
                      </div>
                      <div class="col-md-3 col-lg-3 col-xl-3">
                        <p class="lead fw-normal mb-2">{{saleForm.vars['data'].getProduct().nomproduit}}</p>
                      </div>
                      <div class="col-md-3 col-lg-3 col-xl-2 d-flex">                       
                        {{ form_widget(saleForm.quantitySale, {
                          'empty_data': saleForm.vars['data'].getQuantitySale(),
                          'attr' : {
                            'class': 'form-control form-control-sm'
                          }
                        }) }}                       
                      </div>
                      <div class="col-md-3 col-lg-2 col-xl-2 offset-lg-1">
                        <p class="mb-0">{{saleForm.vars['data'].getProduct().prix}} ‚Ç¨</p>
                         <p>Total:<span id="total-price"> 0.00 ‚Ç¨</span></p>
                      </div>
                      <div class="col-md-1 col-lg-1 col-xl-1 text-end">
                        <a href="{{ path('remove', { id: saleForm.vars['data'].getProduct().id, csrf_token: csrf_token('delete' ~ saleForm.vars['data'].getProduct().id) }) }}" class="text-danger">
                          <i class="fas fa-trash fa-lg"></i>
                        </a>
                      </div>
                    </div>
                  </div>
                </div>
              {% endfor %}
              <div class="card">
               

                    <button type="submit" class="btn btn-warning btn-block btn-lg btnvalider">Valider le panier</button>
               
              </div>
						{{ form_end(cartForm) }}
						{# si le panier contient pas de produit #}
					{% else %}
						<p>Votre panier est vide üôÑ</p>
					{% endif %}
					{# Fin condition if #}
				</div>
			</div>
		</div>
	</section>
{% endblock %}
